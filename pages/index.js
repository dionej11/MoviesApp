import Head from 'next/head'
import { useAuth } from './context/authContext';
import { useState, useEffect } from "react";
import Link from 'next/link';
import { Container } from '../components/homeComp/container';
import  Menu  from '../components/menu/index';
import {database} from '../firebase';
import { ref, child, get  } from "firebase/database";

export default function Home() {
  const {user, loading} = useAuth();
  const [dataMovies, setDataMovies] = useState("");
  const [dataUser, setDataUser] = useState(null);
  const [pagination, setPagination] = useState(1);

  useEffect(()=>{
    getDataMovies(pagination);
    user ?
    getDataUser():null
  },[user]);

  const getDataUser = async () => {
    const dbRef = ref(database);
    get(child(dbRef, `users/${user.uid}`)).then(snapshot => {
        if (snapshot.exists()) {
            let collectionsObj = {};
            Object.entries(snapshot.val().collections).forEach(([key, value]) => collectionsObj[key] = value.nameColecction);
            setDataUser(collectionsObj);
        } else {
            console.log("No data available");
        }
    }).catch(error => {console.log(error)});

  }

  const getDataMovies = async (page) => {
    try {
        const response = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=54b6f133755c56961a226c9f72c7c0e5&language=es-ES&page=${page}`,{
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json',
            },
            method: 'GET'
        });
        const responseJson = await response.json();
        setDataMovies(responseJson.results.reverse());
    } catch (error) {
        console.log(error);
    }
  } 

  if (loading) return <span>Loading...</span>

  return (
    <div>
      <Head>
        <title>Home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {
        user && dataMovies ?
        <>
          <Container user={user} dataUser={dataUser} data={dataMovies} getData = {getDataMovies} actualPage = {pagination} updatePage = {setPagination} />
          <Menu />
        </>
        : <div>
          <p>Inicia sesi√≥n</p>
          <Link href="/login">Ir</Link>
        </div>
      }
    </div>
  )
}
